{"version":3,"sources":["components/Story/Story.module.css","components/Layout/Toolbar/Toolbar.module.css","components/UI/Loader/Loader.module.css","components/UI/Wrapper/Wrapper.module.css","components/StoryList/StoryList.module.css","components/UI/ErrorMessage/ErrorMessage.module.css","components/Layout/Toolbar/Toolbar.js","components/UI/Wrapper/Wrapper.js","components/Layout/Layout.js","components/Story/Story.js","components/StoryList/StoryList.js","components/UI/Loader/Loader.js","components/UI/ErrorMessage/ErrorMessage.js","hackerNewsClient.js","containers/StoryContainer/StoryContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","story","storyTitle","storyLink","storyDescription","header","logo","brand","loaderWrapper","loader","spin","wrapper","stories","errorMessage","Toolbar","react_default","a","createElement","className","styles","Wrapper","props","children","Layout","react","UI_Wrapper_Wrapper","Layout_Toolbar_Toolbar","Story","href","url","target","title","score","author","StoryList","map","components_Story_Story","key","id","by","Loader","ErrorMessage","urls","itemId","concat","getData","_callee","response","jsonResponse","regenerator_default","wrap","_context","prev","next","fetch","sent","ok","Error","json","abrupt","stop","HackerNewsClient","StoryContainer","state","error","hackerNewsClient","this","getTopStories","storyIDs","i","getItem","push","setState","console","log","t0","storiesComponent","components_StoryList_StoryList","length","UI_Loader_Loader","UI_ErrorMessage_ErrorMessage","Component","App","components_Layout_Layout","containers_StoryContainer_StoryContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bddcc901.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"story\":\"Story_story__83d6Z\",\"storyTitle\":\"Story_storyTitle__44n-r\",\"storyLink\":\"Story_storyLink__303nC\",\"storyDescription\":\"Story_storyDescription__1LKXq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Toolbar_header__2hvKg\",\"logo\":\"Toolbar_logo__3dF74\",\"brand\":\"Toolbar_brand__3b6rg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderWrapper\":\"Loader_loaderWrapper__24vgt\",\"loader\":\"Loader_loader__1MjUl\",\"spin\":\"Loader_spin__3pTHl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Wrapper_wrapper__19o2u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stories\":\"StoryList_stories__3VF0G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMessage\":\"ErrorMessage_errorMessage__1gIaI\"};","import React from 'react';\nimport styles from './Toolbar.module.css';\n\n\nconst Toolbar = () => {\n    return ( \n        <header className = {styles.header}>\n            <h2 className = {styles.logo}> Y </h2>\n            <h2 className = {styles.brand}> Hacker News </h2>\n        </header>\n    );\n}\n\nexport default Toolbar;","import React from 'react';\nimport styles from './Wrapper.module.css';\n\nconst Wrapper = (props) => {\n    return ( \n        <div className = {styles.wrapper}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Wrapper;","import React, { Fragment } from 'react';\nimport Toolbar from './Toolbar/Toolbar';\nimport Wrapper from '../UI/Wrapper/Wrapper';\n\nconst Layout = (props) => {\n    return (\n        <Fragment>\n            <Wrapper>\n                <Toolbar />\n            </Wrapper>\n            {props.children}\n        </Fragment>\n    );\n}\n\nexport default Layout;","import React from 'react';\nimport styles from './Story.module.css';\n\nconst Story = (props) => {\n    return (\n        <li className = {styles.story}>\n            <h2 className = {styles.storyTitle}>\n                <a href= {props.url} target = \"_blank\" className={styles.storyLink}> {props.title} </a>\n            </h2>\n            <p className = {styles.storyDescription}>{props.score} points by {props.author} </p>\n        </li>\n    );\n}\n\nexport default Story;","import React from 'react';\nimport styles from './StoryList.module.css';\nimport Story from '../Story/Story';\n\nconst StoryList = (props) => {\n    return ( \n        <ol className = {styles.stories}>\n            {transformStories(props.stories)}\n        </ol>\n    );\n}\n\nfunction transformStories(stories){\n    return stories.map( (story) => {\n        return (\n            <Story key = {story.id}\n            title = {story.title}\n            url = {story.url}\n            author = {story.by}\n            score = {story.score}/>\n        )\n    })\n    \n}\n \nexport default StoryList;","import React from 'react';\nimport styles from './Loader.module.css';\n\nconst Loader = () => {\n    return (\n        <div className={styles.loaderWrapper}>\n            <div className={styles.loader}></div>\n        </div>\n    );\n}\n\nexport default Loader;","import React from 'react';\nimport styles from './ErrorMessage.module.css';\n\nconst ErrorMessage = () => {\n    return ( \n        <p className = {styles.errorMessage}>\n            There was an error retrieving the stories. Please try again later.\n        </p>\n     );\n}\n \nexport default ErrorMessage;","const urls = {\n    topStories: 'https://hacker-news.firebaseio.com/v0/topstories.json',\n    getItemUrl: (itemId) => `https://hacker-news.firebaseio.com/v0/item/${itemId}.json`\n}\n\nclass HackerNewsClient {\n    getTopStories(){\n        return getData(urls.topStories);\n    }\n\n    getItem(id){\n        const itemUrl = urls.getItemUrl(id);\n        return getData(itemUrl);\n    }\n}\n\nasync function getData(url){\n    let response = await fetch(url);\n    if (!response.ok) throw new Error('Error 404: Url not found');\n    let jsonResponse = await response.json();\n    return jsonResponse;\n}\n\nexport default HackerNewsClient;\n","import React, { Component} from 'react';\nimport StoryList from '../../components/StoryList/StoryList';\nimport Wrapper from '../../components/UI/Wrapper/Wrapper'\nimport Loader from '../../components/UI/Loader/Loader';\nimport ErrorMessage from '../../components/UI/ErrorMessage/ErrorMessage';\nimport HackerNewsClient from '../../hackerNewsClient';\n\nclass StoryContainer extends Component {\n    state = {\n        stories: [],\n        error: false\n    }\n    hackerNewsClient = new HackerNewsClient();\n\n    async componentDidMount() {\n        try {\n            let storyIDs = await this.hackerNewsClient.getTopStories();\n            let stories = [];\n    \n            for (let i = 0; i < 30; i++){\n                let story = await this.hackerNewsClient.getItem(storyIDs[i]);\n                stories.push(story);\n            }\n            this.setState({ stories: stories });\n        }\n\n        catch (error) {\n            this.setState({ error: true });\n            console.log(error);\n        }\n    }\n\n    render() {\n\n        let storiesComponent = (\n            <Wrapper>\n                <StoryList stories={this.state.stories} />\n            </Wrapper>\n        );\n\n        if (this.state.stories.length === 0) {\n            storiesComponent = <Loader />\n        }\n\n        if (this.state.error){\n            storiesComponent = <ErrorMessage/> ;\n        }\n\n        return (\n            storiesComponent\n        );\n    }\n}\n\nexport default StoryContainer;","import React from 'react';\nimport Layout from './components/Layout/Layout';\nimport StoryContainer from './containers/StoryContainer/StoryContainer';\n\nfunction App() {\n    return (\n        <Layout>\n            <StoryContainer/>\n        </Layout>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}